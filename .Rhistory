install.packages("~/Tool/scRNA-tools/scSimulator")
install.packages("~/Tool/scRNA-tools/scSimulator", type = "source", repos = NULL)
library(scSimulator)
scSimulator
library(scSimulator)
library(scSimulator)
?scSimulator
library(scSimulator)
library(scSimulator)
library(scSimulator)
?scSimulator
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(Biobase)
library(Seurat)
library(Seurat)
library(parallel)
library(doSNOW)
library(scSimulator)
# bulk data of neutrophil
neutrophil.dir <- "/Users/zengbio/Project/SingleCell/SingleCellClassifier_Experiments/Mouse_Simulation"
neutrophil.db <- "GSE84874_counts.txt"
data <- read.table(file.path(neutrophil.dir, neutrophil.db), row.names = 1, header = T)
diff <- grep("DIFF", colnames(data), value = T)
data <- data[, diff]
meta <- data.frame(time = factor(as.numeric(sapply(colnames(data), ExtractField, 3, "\\."))))
rownames(meta) <- colnames(data)
# drop-seq data
load(file.path("/Users/zengbio/Project/SingleCell/SingleCellClassifier_Experiments/Mouse_Simulation/DropSeq", "dropseq_sim.rda"))
m <- ncol(dropseq.data)
# simulation
n <- 300
sample.ids <- sample(rownames(meta), n, replace = TRUE)
times <- meta[sample.ids, "time"]
names(times) <- paste0("Cell", 1:n)
# simulation
n <- 30
sample.ids <- sample(rownames(meta), n, replace = TRUE)
times <- meta[sample.ids, "time"]
names(times) <- paste0("Cell", 1:n)
chunks <- detectCores()
cl<-makeCluster(chunks,type="SOCK")
cl<-makeCluster(chunks,type="SOCK")
registerDoSNOW(cl)
progress <- function(n) cat(sprintf("task %d is complete\n", n))
opts <- list(progress=progress)
X <- foreach(m=split(1:n,1:chunks), .combine='cbind', .options.snow=opts) %dopar% {
y <- lapply(m, function(i){
scSimulator(dropseq.data[,sample(colnames(dropseq.data),1)],
data[,sample.ids[i]],
method = "bi",
lambda = 50)
})
y <- do.call('cbind', y)
colnames(y) <- paste0("Cell", m)
y
}
library(scSimulator)
library(scSimulator)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
data <- read.table(neutrophil.db, row.names = 1, header = T)
# bulk data of neutrophil
neutrophil.dir <- "/Users/zengbio/Project/SingleCell/SingleCellClassifier_Experiments/Mouse_Simulation"
neutrophil.db <- "GSE84874_counts.txt"
data <- read.table(file.path(neutrophil.dir, neutrophil.db), row.names = 1, header = T)
neutrophil <- data
save(neutrophil, file = file.path("/Users/zengbio/Tool/scRNA-tools/scSimulator/data","neutrophil.RData"))
# drop-seq data
load(file.path("/Users/zengbio/Project/SingleCell/SingleCellClassifier_Experiments/Mouse_Simulation/DropSeq", "dropseq_sim.rda"))
save(dropseq.data, file = file.path("/Users/zengbio/Tool/scRNA-tools/scSimulator/data", "dropseq.RData"))
library(scSimulator)
library(scSimulator)
data(neutrophil)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
# drop-seq data
data(dropseq)
class(dropseq)
data("dropseq")
library(Biobase)
library(Biobase)
library(Seurat)
library(parallel)
library(doSNOW)
library(scSimulator)
# bulk data of neutrophil
data(neutrophil)
diff <- grep("DIFF", colnames(neutrophil), value = T)
neutrophil <- neutrophil[, diff]
meta <- data.frame(time = factor(as.numeric(sapply(colnames(neutrophil), ExtractField, 3, "\\."))))
rownames(meta) <- colnames(neutrophil)
# drop-seq data
data(dropseq)
m <- ncol(dropseq)
# drop-seq data
data(dropseq)
m <- ncol(dropseq.data)
dropseq <- dropseq.data
save(dropseq, file = file.path("/Users/zengbio/Tool/scRNA-tools/scSimulator/data","dropseq.RData"))
library(scSimulator)
library(scSimulator)
library(scSimulator)
library(scSimulator)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
# drop-seq data
data(dropseq)
m <- ncol(dropseq)
m
library(Biobase)
library(Seurat)
library(parallel)
library(doSNOW)
library(scSimulator)
# bulk data of neutrophil
data(neutrophil)
diff <- grep("DIFF", colnames(neutrophil), value = T)
neutrophil <- neutrophil[, diff]
meta <- data.frame(time = factor(as.numeric(sapply(colnames(neutrophil), ExtractField, 3, "\\."))))
rownames(meta) <- colnames(neutrophil)
# drop-seq data
data(dropseq)
m <- ncol(dropseq)
# simulation
n <- 300
sample.ids <- sample(rownames(meta), n, replace = TRUE)
times <- meta[sample.ids, "time"]
names(times) <- paste0("Cell", 1:n)
chunks <- detectCores()
cl<-makeCluster(chunks,type="SOCK")
registerDoSNOW(cl)
progress <- function(n) cat(sprintf("task %d is complete\n", n))
opts <- list(progress=progress)
X <- foreach(m=split(1:n,1:chunks), .combine='cbind', .options.snow=opts) %dopar% {
y <- lapply(m, function(i){
scSimulator::scSimulator(dropseq[,sample(colnames(dropseq),1)],
neutrophil[,sample.ids[i]],
method = "bi",
lambda = 50)
})
y <- do.call('cbind', y)
colnames(y) <- paste0("Cell", m)
y
}
rownames(X) <- rownames(data)
# Using Seurat for tSNE
library(Seurat)
scRNA <- CreateSeuratObject(X, min.cells = 3, min.genes = 30, is.expr = 0)
scRNA@meta.data$time <- times[scRNA@cell.names]
# filtering
scRNA <- FilterCells(scRNA,
subset.names=c("nGene", "nUMI"),
low.thresholds=c(30, 100),
high.thresholds=c(Inf, Inf))
# Normalization
scRNA <- NormalizeData(scRNA)
# Find HVG
scRNA <- FindVariableGenes(scRNA)
range(X)
library(useful)
corner(dropseq)
range(scRNA@data)
scRNA <- CreateSeuratObject(X, min.cells = 3, min.genes = 30, is.expr = 0)
range(scRNA@data)
rownames(X) <- rownames(neutrophil)
scRNA <- CreateSeuratObject(X, min.cells = 3, min.genes = 30, is.expr = 0)
scRNA@meta.data$time <- times[scRNA@cell.names]
# filtering
scRNA <- FilterCells(scRNA,
subset.names=c("nGene", "nUMI"),
low.thresholds=c(30, 100),
high.thresholds=c(Inf, Inf))
# Normalization
scRNA <- NormalizeData(scRNA)
# Find HVG
scRNA <- FindVariableGenes(scRNA)
library(scSimulator)
library(scSimulator)
browseVignettes("scSimulator")
?scSimulator
vignette("neutrophil_development")
library(scSimulator)
library(scSimulator)
browseVignettes("scSimulator")
?devtools::build
?build_vignettes
devtools::build_vignettes("scSimulator")
devtools::build_vignettes("/Users/zengbio/Tool/scRNA-tools/scSimulator")
devtools::build("/Users/zengbio/Tool/scRNA-tools/scSimulator")
library(scSimulator)
browseVignettes("scSimulator")
devtools::use_vignette("neutrophil",pkg="/Users/zengbio/Tool/scRNA-tools/scSimulator")
library(scSimulator)
browseVignettes("scSimulator")
browseVignettes("/Users/zengbio/Tool/scRNA-tools/scSimulator")
devtools::build("/Users/zengbio/Tool/scRNA-tools/scSimulator", vignettes = T)
library(scSimulator)
browseVignettes()
browseVignettes(scSimulator())
browseVignettes(scSimulator
)
browseVignettes(scSimulator)
browseVignettes("scSimulator")
library(scSimulator)
library(scSimulator)
?scSimulator
library(scSimulator)
library(scSimulator)
?devtools::install
?devtools::build
devtools::use_vignette("neutrophil")
usethis::use_vignette("neutrophil")
library(randomForest)
